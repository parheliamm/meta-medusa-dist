########################################################################
# myStromer - 'medusa' logging data configuration                      #
########################################################################

module(load="omhttp")

## medusa firmware version
set $.FIRMWARE_VERSION = `cat /etc/medusa-version`;
set $.FIRMWARE_VERSION_TRUNC = replace($.FIRMWARE_VERSION, "\n", "");

###
## template(s) ...
###

template(name="medusa-template" type="list")
{
  constant(value="{")
  constant(value="\"@timestamp\":\"")     property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"@version\":\"1")
  constant(value="\",\"message\":\"")     property(name="msg" format="jsonr")
  constant(value="\",\"sysloghost\":\"")  property(name="hostname")
  constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
  constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
  constant(value="\",\"programname\":\"") property(name="programname")
  constant(value="\",\"procid\":\"")      property(name="procid")
  constant(value="\",\"firmware\":\"")    property(name="$.FIRMWARE_VERSION_TRUNC")
  constant(value="\"}\n")
}

template(name="tpl_echo" type="string" string="%msg%")

###
## ruleset(s) ...
###

ruleset(name="rs_retry_forever") {
    action(
        type="omhttp"
        server="http://logging.stromerbike.com"
        serverport="8080"
        restpath="events"
        template="tpl_echo"
        retry="on"
        retry.ruleset="rs_retry_forever"
    )
}

#ruleset(name="rs_stromer_logging") {
    if ($programname == 'EventLogServer' and prifilt("*.warning")) then {
        ## uncomment for testing purposes
        #action(type="omfile" file="/var/log/medusaEventLogServerRaw.log")
        #action(type="omfile" file="/var/log/medusaEventLogServer.log" template="medusa-template")
        ## stop

        action(
            type="omhttp"                
            server="http://logging.stromerbike.com"
            serverport="8080"
            restpath="events"
            template="medusa-template"
            batch="off"
            retry="on"
            retry.ruleset="rs_retry_forever"
            queue.spoolDirectory="/mnt/data/rsyslog"
            queue.filename="in_queue"
            queue.size="100"
            queue.maxDiskSpace="100k"
            queue.type="LinkedList"
            queue.saveOnShutdown="on"
        )
    }
#}

###
## input(s) ...
###

## !!! don't call socket command twice (here and in rsyslog.conf) !!!
#input(
#    type="imuxsock"
#    Socket="/run/systemd/journal/syslog"
#    Ruleset="rs_stromer_logging"
#)

